{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nim/dev/code-challange/client/src/components/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\"; //Redux\n\nimport { useDispatch } from \"react-redux\";\nimport { clearErrors } from \"../../features/car/carSlice\"; //Components\n\nimport Makes from \"../Steps/Makes\";\nimport Models from \"../Steps/Models\";\nimport Vehicles from \"../Steps/Vehicles\";\n/**\n *\n *\n * @param {*} {\n *   makes,\n *   models,\n *   vehicles,\n *   apiErrors,\n *   resetState,\n *   getVehicles,\n *   getCarModels,\n *   requestObject,\n *   updateRequestObject,\n * }\n * @return {*}\n */\n\nconst Form = ({\n  makes,\n  models,\n  vehicles,\n  apiErrors,\n  resetState,\n  getVehicles,\n  getCarModels,\n  requestObject,\n  updateRequestObject\n}) => {\n  _s();\n\n  const [step, setStep] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [vehiclePerPage] = useState(20);\n  const dispatch = useDispatch(); //Proceed to next step\n\n  /**\n   *This function will handle the button press when the user wants to go to the next step.\n   *It will add 1+ to the current step state\n   */\n\n  const nextStep = () => {\n    setStep(step + 1);\n  }; //Go back to prev step\n\n\n  const prevStep = () => {\n    setStep(step - 1);\n    dispatch(clearErrors());\n  }; //Go back to prev step\n\n\n  const restartSteps = () => {\n    setStep(1);\n    resetState();\n  }; //Handle fields change\n\n\n  const onSelectChange = e => {\n    updateRequestObject([{\n      name: e.target.name,\n      value: e.target.value\n    }]);\n  }; //Get current vehicles\n\n\n  const indexOfLastVehicle = currentPage * vehiclePerPage;\n  const indexOfFirstVehicle = indexOfLastVehicle - vehiclePerPage;\n  let currentVehicles = vehicles !== null ? vehicles.slice(indexOfFirstVehicle, indexOfLastVehicle) : null; //Change Page\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  let component;\n\n  switch (step) {\n    case 1:\n      return component = /*#__PURE__*/_jsxDEV(Makes, {\n        stepId: \"makes\",\n        stepData: makes,\n        nextStep: nextStep,\n        apiErrors: apiErrors,\n        getCarModels: getCarModels,\n        handleChange: onSelectChange,\n        requestObject: requestObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return component = /*#__PURE__*/_jsxDEV(Models, {\n        stepId: \"models\",\n        stepData: models,\n        prevStep: prevStep,\n        nextStep: nextStep,\n        getVehicles: getVehicles,\n        handleChange: onSelectChange,\n        requestObject: requestObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n\n    case 3:\n      return component = /*#__PURE__*/_jsxDEV(Vehicles, {\n        stepId: \"vehicles\",\n        paginate: paginate,\n        nextStep: nextStep,\n        prevStep: prevStep,\n        apiErrors: apiErrors,\n        stepData: currentVehicles,\n        restartSteps: restartSteps,\n        handleChange: onSelectChange,\n        requestObject: requestObject,\n        vehiclePerPage: vehiclePerPage,\n        totalVehicles: vehicles !== null ? vehicles.length : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n\n    default:\n      break;\n  }\n\n  return {\n    component\n  };\n};\n\n_s(Form, \"V7LWfxkTH/FXZnhqCnZ66+apZuk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nForm.propTypes = {\n  requestObject: PropTypes.object,\n  makes: PropTypes.array,\n  models: PropTypes.array,\n  vehicles: PropTypes.array,\n  apiErrors: PropTypes.string,\n  resetState: PropTypes.func,\n  getVehicles: PropTypes.func,\n  getCarModels: PropTypes.func,\n  updateRequestObject: PropTypes.func\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/nim/dev/code-challange/client/src/components/Form/index.js"],"names":["React","useState","PropTypes","useDispatch","clearErrors","Makes","Models","Vehicles","Form","makes","models","vehicles","apiErrors","resetState","getVehicles","getCarModels","requestObject","updateRequestObject","step","setStep","currentPage","setCurrentPage","vehiclePerPage","dispatch","nextStep","prevStep","restartSteps","onSelectChange","e","name","target","value","indexOfLastVehicle","indexOfFirstVehicle","currentVehicles","slice","paginate","pageNumber","component","length","propTypes","object","array","string","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Redux\nimport { useDispatch } from \"react-redux\";\nimport { clearErrors } from \"../../features/car/carSlice\";\n\n//Components\nimport Makes from \"../Steps/Makes\";\nimport Models from \"../Steps/Models\";\nimport Vehicles from \"../Steps/Vehicles\";\n\n/**\n *\n *\n * @param {*} {\n *   makes,\n *   models,\n *   vehicles,\n *   apiErrors,\n *   resetState,\n *   getVehicles,\n *   getCarModels,\n *   requestObject,\n *   updateRequestObject,\n * }\n * @return {*}\n */\n\nconst Form = ({\n  makes,\n  models,\n  vehicles,\n  apiErrors,\n  resetState,\n  getVehicles,\n  getCarModels,\n  requestObject,\n  updateRequestObject,\n}) => {\n  const [step, setStep] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [vehiclePerPage] = useState(20);\n  const dispatch = useDispatch();\n\n  //Proceed to next step\n  /**\n   *This function will handle the button press when the user wants to go to the next step.\n   *It will add 1+ to the current step state\n   */\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  //Go back to prev step\n  const prevStep = () => {\n    setStep(step - 1);\n    dispatch(clearErrors());\n  };\n\n  //Go back to prev step\n  const restartSteps = () => {\n    setStep(1);\n    resetState();\n  };\n\n  //Handle fields change\n  const onSelectChange = (e) => {\n    updateRequestObject([\n      {\n        name: e.target.name,\n        value: e.target.value,\n      },\n    ]);\n  };\n\n  //Get current vehicles\n  const indexOfLastVehicle = currentPage * vehiclePerPage;\n  const indexOfFirstVehicle = indexOfLastVehicle - vehiclePerPage;\n  let currentVehicles =\n    vehicles !== null\n      ? vehicles.slice(indexOfFirstVehicle, indexOfLastVehicle)\n      : null;\n\n  //Change Page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  let component;\n\n  switch (step) {\n    case 1:\n      return (component = (\n        <Makes\n          stepId=\"makes\"\n          stepData={makes}\n          nextStep={nextStep}\n          apiErrors={apiErrors}\n          getCarModels={getCarModels}\n          handleChange={onSelectChange}\n          requestObject={requestObject}\n        />\n      ));\n    case 2:\n      return (component = (\n        <Models\n          stepId=\"models\"\n          stepData={models}\n          prevStep={prevStep}\n          nextStep={nextStep}\n          getVehicles={getVehicles}\n          handleChange={onSelectChange}\n          requestObject={requestObject}\n        />\n      ));\n    case 3:\n      return (component = (\n        <Vehicles\n          stepId=\"vehicles\"\n          paginate={paginate}\n          nextStep={nextStep}\n          prevStep={prevStep}\n          apiErrors={apiErrors}\n          stepData={currentVehicles}\n          restartSteps={restartSteps}\n          handleChange={onSelectChange}\n          requestObject={requestObject}\n          vehiclePerPage={vehiclePerPage}\n          totalVehicles={vehicles !== null ? vehicles.length : 0}\n        />\n      ));\n    default:\n      break;\n  }\n\n  return { component };\n};\n\nForm.propTypes = {\n  requestObject: PropTypes.object,\n  makes: PropTypes.array,\n  models: PropTypes.array,\n  vehicles: PropTypes.array,\n  apiErrors: PropTypes.string,\n  resetState: PropTypes.func,\n  getVehicles: PropTypes.func,\n  getCarModels: PropTypes.func,\n  updateRequestObject: PropTypes.func,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}