{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nim/dev/code-challange/client/src/components/SelectField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Input, Option } from \"./Form/FormElements\";\n\nconst SelectedField = ({\n  stepId,\n  stepData,\n  required,\n  requestObject,\n  handleChange\n}) => {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState([]);\n\n  const handleSelect = e => {\n    e.preventDefault();\n    let selectedItems = e.target.selectedOptions;\n    handleChange(e);\n    const options = [];\n\n    for (let i = 0; i < selectedItems.length; i++) {\n      options.push(selectedItems[i].value);\n    }\n\n    setSelectedOption(options);\n  }; //Set Selected\n\n\n  const handleChangeState = selectOptions => {\n    setSelectedOption(selectOptions);\n  };\n\n  useEffect(() => {\n    let arrayOff = [];\n\n    if (requestObject) {\n      arrayOff.push(requestObject);\n    }\n\n    if (arrayOff.length > 0) {\n      handleChangeState(arrayOff);\n    }\n  }, [requestObject]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        id: stepId,\n        name: stepId,\n        multiple: true,\n        value: selectedOption,\n        onChange: e => handleSelect(e),\n        required: required ? required : null,\n        children: Array.isArray(stepData) ? stepData.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            value: data,\n            children: data\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectedField, \"vokAmw8lPiaOr4E3uFu9Zh5XEf8=\");\n\n_c = SelectedField;\nexport default SelectedField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedField\");","map":{"version":3,"sources":["/Users/nim/dev/code-challange/client/src/components/SelectField.js"],"names":["React","useState","useEffect","Input","Option","SelectedField","stepId","stepData","required","requestObject","handleChange","selectedOption","setSelectedOption","handleSelect","e","preventDefault","selectedItems","target","selectedOptions","options","i","length","push","value","handleChangeState","selectOptions","arrayOff","Array","isArray","map","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,qBAA9B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,MADqB;AAErBC,EAAAA,QAFqB;AAGrBC,EAAAA,QAHqB;AAIrBC,EAAAA,aAJqB;AAKrBC,EAAAA;AALqB,CAAD,KAMhB;AAAA;;AACJ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAGF,CAAC,CAACG,MAAF,CAASC,eAA7B;AACAR,IAAAA,YAAY,CAACI,CAAD,CAAZ;AAEA,UAAMK,OAAO,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAAa,CAACK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CD,MAAAA,OAAO,CAACG,IAAR,CAAaN,aAAa,CAACI,CAAD,CAAb,CAAiBG,KAA9B;AACD;;AACDX,IAAAA,iBAAiB,CAACO,OAAD,CAAjB;AACD,GAXD,CAHI,CAgBJ;;;AACA,QAAMK,iBAAiB,GAAIC,aAAD,IAAmB;AAC3Cb,IAAAA,iBAAiB,CAACa,aAAD,CAAjB;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,QAAQ,GAAG,EAAf;;AACA,QAAIjB,aAAJ,EAAmB;AACjBiB,MAAAA,QAAQ,CAACJ,IAAT,CAAcb,aAAd;AACD;;AACD,QAAIiB,QAAQ,CAACL,MAAT,GAAkB,CAAtB,EAAyB;AACvBG,MAAAA,iBAAiB,CAACE,QAAD,CAAjB;AACD;AACF,GARQ,EAQN,CAACjB,aAAD,CARM,CAAT;AAUA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,EAAE,EAAEH,MADN;AAEE,QAAA,IAAI,EAAEA,MAFR;AAGE,QAAA,QAAQ,EAAE,IAHZ;AAIE,QAAA,KAAK,EAAEK,cAJT;AAKE,QAAA,QAAQ,EAAGG,CAAD,IAAOD,YAAY,CAACC,CAAD,CAL/B;AAME,QAAA,QAAQ,EAAEN,QAAQ,GAAGA,QAAH,GAAc,IANlC;AAAA,kBAQGmB,KAAK,CAACC,OAAN,CAAcrB,QAAd,IACGA,QAAQ,CAACsB,GAAT,CAAa,CAACC,IAAD,EAAOV,CAAP,KAAa;AACxB,8BACE,QAAC,MAAD;AAAgB,YAAA,KAAK,EAAEU,IAAvB;AAAA,sBACGA;AADH,aAAaV,CAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND,CADH,GAQG;AAhBN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD,CA7DD;;GAAMf,a;;KAAAA,a;AA+DN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Input, Option } from \"./Form/FormElements\";\n\nconst SelectedField = ({\n  stepId,\n  stepData,\n  required,\n  requestObject,\n  handleChange,\n}) => {\n  const [selectedOption, setSelectedOption] = useState([]);\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    let selectedItems = e.target.selectedOptions;\n    handleChange(e);\n\n    const options = [];\n\n    for (let i = 0; i < selectedItems.length; i++) {\n      options.push(selectedItems[i].value);\n    }\n    setSelectedOption(options);\n  };\n\n  //Set Selected\n  const handleChangeState = (selectOptions) => {\n    setSelectedOption(selectOptions);\n  };\n\n  useEffect(() => {\n    let arrayOff = [];\n    if (requestObject) {\n      arrayOff.push(requestObject);\n    }\n    if (arrayOff.length > 0) {\n      handleChangeState(arrayOff);\n    }\n  }, [requestObject]);\n\n  return (\n    <>\n      <div>\n        <Input\n          id={stepId}\n          name={stepId}\n          multiple={true}\n          value={selectedOption}\n          onChange={(e) => handleSelect(e)}\n          required={required ? required : null}\n        >\n          {Array.isArray(stepData)\n            ? stepData.map((data, i) => {\n                return (\n                  <Option key={i} value={data}>\n                    {data}\n                  </Option>\n                );\n              })\n            : null}\n        </Input>\n      </div>\n    </>\n  );\n};\n\nexport default SelectedField;\n"]},"metadata":{},"sourceType":"module"}